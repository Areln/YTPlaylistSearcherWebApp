{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/progress-bar\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nfunction TestComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction TestComponent_form_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function TestComponent_form_9_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.ResultsSearch());\n    });\n    i0.ɵɵelementStart(1, \"div\")(2, \"mat-form-field\", 2)(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Search\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 4);\n    i0.ɵɵtext(7, \"Submit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.resultSearchForm);\n  }\n}\nfunction TestComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"mat-progress-bar\", 12);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TestComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"a\", 14)(2, \"table\")(3, \"tr\")(4, \"td\");\n    i0.ɵɵelement(5, \"img\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\")(7, \"div\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const video_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"https://youtu.be/\", video_r7.videoID, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"src\", video_r7.thumbnail, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(video_r7.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(video_r7.channelTitle);\n  }\n}\nfunction TestComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, TestComponent_div_11_div_1_Template, 11, 4, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.videosToDisplay);\n  }\n}\nexport class TestComponent {\n  constructor(http, baseUrl, formBuilder) {\n    this.isLoading = false;\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.formBuilder = formBuilder;\n    this.loadPlaylistForm = formBuilder.group({\n      playlistLink: ['https://www.youtube.com/playlist?list=PLNL_Z6NDFLJZafBMO4kA9PbNBq0t-f9hx']\n    });\n    this.resultSearchForm = formBuilder.group({\n      searchInput: ['']\n    });\n  }\n  getPlaylistLinkInput() {\n    return this.loadPlaylistForm.controls.playlistLink.value;\n  }\n  getSearchInput() {\n    return this.resultSearchForm.controls.searchInput.value;\n  }\n  PlaylistSubmit() {\n    var playlistID = this.getPlaylistLinkInput().includes('https://www.youtube.com/playlist?list=') ? this.loadPlaylistForm.controls.playlistLink.value.split('=')[1] : this.loadPlaylistForm.controls.playlistLink.value;\n    this.isLoading = true;\n    this.http.get(this.baseUrl + 'playlist/GetPlaylistFromYT?playlistID=' + playlistID).subscribe(result => {\n      this.playlist = result;\n      this.videosToDisplay = this.playlist.videos;\n      this.isLoading = false;\n      console.log(this.playlist);\n    }, error => {\n      console.error(error);\n      this.isLoading = false;\n    });\n  }\n  ResultsSearch() {\n    var searchString = this.getSearchInput().toLowerCase();\n    this.videosToDisplay = this.playlist.videos.filter(x => {\n      if (x.channelTitle != undefined) {\n        if (x.channelTitle.toLowerCase().includes(searchString)) {\n          return true;\n        }\n      }\n      if (x.title != undefined) {\n        if (x.title.toLowerCase().includes(searchString)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n}\nTestComponent.ɵfac = function TestComponent_Factory(t) {\n  return new (t || TestComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nTestComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TestComponent,\n  selectors: [[\"app-test\"]],\n  decls: 24,\n  vars: 5,\n  consts: [[4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"long-input\"], [\"formControlName\", \"playlistLink\", \"matInput\", \"\", \"placeholder\", \"Link or ID\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", \"color\", \"primary\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"video-results\", 4, \"ngIf\"], [1, \"video-results\"], [1, \"listitemvideo\"], [\"href\", \"\", \"target\", \"_blank\", 1, \"video-link\", 2, \"color\", \"white\", \"text-decoration\", \"none\"], [\"src\", \"https://img.youtube.com/vi/JzLV2pOJbss/0.jpg\", 1, \"thumbnail\"], [\"formControlName\", \"searchInput\", \"matInput\", \"\", \"placeholder\", \"Video Title\"], [\"mode\", \"indeterminate\"], [\"class\", \"listitemvideo\", 4, \"ngFor\", \"ngForOf\"], [\"target\", \"_blank\", 1, \"video-link\", 2, \"color\", \"white\", \"text-decoration\", \"none\", 3, \"href\"], [1, \"thumbnail\", 3, \"src\"]],\n  template: function TestComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TestComponent_div_0_Template, 2, 1, \"div\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function TestComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.PlaylistSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\")(3, \"mat-form-field\", 2)(4, \"mat-label\");\n      i0.ɵɵtext(5, \"Playlist\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 4);\n      i0.ɵɵtext(8, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(9, TestComponent_form_9_Template, 8, 1, \"form\", 5);\n      i0.ɵɵtemplate(10, TestComponent_div_10_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(11, TestComponent_div_11_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"div\", 8)(14, \"a\", 9)(15, \"table\")(16, \"tr\")(17, \"td\");\n      i0.ɵɵelement(18, \"img\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"td\")(20, \"div\");\n      i0.ɵɵtext(21, \"Guy Squeexes his shit LIVE on Twitch\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\");\n      i0.ɵɵtext(23, \"SqueexTV\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage != undefined);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loadPlaylistForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.playlist != undefined);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.playlist == undefined && ctx.isLoading == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.playlist != undefined);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i4.MatProgressBar, i5.MatFormField, i5.MatLabel, i6.MatInput, i7.MatButton, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".listitemvideo[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  margin: 10px;\\n  \\n  background-color: var(--mdc-protected-button-container-color, transparent);\\n  font-size: large;\\n  border-radius: 5px;\\n}\\n\\n.thumbnail[_ngcontent-%COMP%] {\\n  width: 200px;\\n}\\n\\n.video-results[_ngcontent-%COMP%] {\\n  max-height: 900px;\\n  overflow: auto;\\n}\\n\\n.long-input[_ngcontent-%COMP%] {\\n  width: 55%;\\n  margin-right: 1%;\\n}\\n\\n.form[_ngcontent-%COMP%] {\\n  background-color: #0f0f0f;\\n}\\n\\n.a.video-link[_ngcontent-%COMP%] {\\n  color: white;\\n  text-decoration: none;\\n}\\n\\n.a.video-link[_ngcontent-%COMP%]:link {\\n  color: white;\\n}\\n\\n.a.video-link[_ngcontent-%COMP%]:visited {\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGVzdC90ZXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9FQUFBO0FBRUE7RUFDRSxhQUFBO0VBQ0EsWUFBQTtFQUNGLCtCQUFBO0VBQ0UsMEVBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBQUY7O0FBR0E7RUFDRSxZQUFBO0FBQUY7O0FBR0E7RUFDRSxpQkFBQTtFQUNBLGNBQUE7QUFBRjs7QUFHQTtFQUNFLFVBQUE7RUFDQSxnQkFBQTtBQUFGOztBQUdBO0VBQ0UseUJBQUE7QUFBRjs7QUFHQTtFQUNFLFlBQUE7RUFDQSxxQkFBQTtBQUFGOztBQUdFO0VBQ0UsWUFBQTtBQUFKOztBQUdFO0VBQ0UsWUFBQTtBQUFKIiwic291cmNlc0NvbnRlbnQiOlsiLypAaW1wb3J0ICdAYW5ndWxhci9tYXRlcmlhbC9wcmVidWlsdC10aGVtZXMvZGVlcHB1cnBsZS1hbWJlci5jc3MnOyovXHJcblxyXG4ubGlzdGl0ZW12aWRlbyB7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBtYXJnaW46IDEwcHg7XHJcbi8qICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjcyNzI3OyovXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWRjLXByb3RlY3RlZC1idXR0b24tY29udGFpbmVyLWNvbG9yLCB0cmFuc3BhcmVudCk7XHJcbiAgZm9udC1zaXplOiBsYXJnZTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbi50aHVtYm5haWwge1xyXG4gIHdpZHRoOiAyMDBweDtcclxufVxyXG5cclxuLnZpZGVvLXJlc3VsdHMge1xyXG4gIG1heC1oZWlnaHQ6IDkwMHB4O1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4ubG9uZy1pbnB1dCB7XHJcbiAgd2lkdGg6IDU1JTtcclxuICBtYXJnaW4tcmlnaHQ6IDElO1xyXG59XHJcblxyXG4uZm9ybSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzBmMGYwZjtcclxufVxyXG5cclxuLmEudmlkZW8tbGluayB7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxuICAuYS52aWRlby1saW5rOmxpbmsge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuXHJcbiAgLmEudmlkZW8tbGluazp2aXNpdGVkIHtcclxuICAgIGNvbG9yOiB3aGl0ZVxyXG4gIH1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","TestComponent","constructor","http","baseUrl","formBuilder","loadPlaylistForm","group","playlistLink","resultSearchForm","searchInput","getPlaylistLinkInput","controls","value","getSearchInput","PlaylistSubmit","playlistID","includes","split","isLoading","get","subscribe","result","playlist","videosToDisplay","videos","console","log","error","ResultsSearch","searchString","toLowerCase","filter","x","channelTitle","undefined","title","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\andaa\\source\\repos\\YTPlaylistSearcherWebApp\\YTPlaylistSearcherWebApp\\ClientApp\\src\\app\\test\\test.component.html","C:\\Users\\andaa\\source\\repos\\YTPlaylistSearcherWebApp\\YTPlaylistSearcherWebApp\\ClientApp\\src\\app\\test\\test.component.ts"],"sourcesContent":["<div *ngIf=\"errorMessage != undefined\">{{errorMessage}}</div>\n\n<form [formGroup]=\"loadPlaylistForm\" (ngSubmit)=\"PlaylistSubmit()\">\n  <div>\n    <mat-form-field class=\"long-input\">\n      <mat-label>Playlist</mat-label>\n      <input formControlName=\"playlistLink\" matInput placeholder=\"Link or ID\">\n    </mat-form-field>\n\n    <button mat-raised-button type=\"submit\" color=\"primary\">Submit</button>\n  </div>\n</form>\n\n<form *ngIf=\"playlist != undefined\" [formGroup]=\"resultSearchForm\" (ngSubmit)=\"ResultsSearch()\">\n  <div>\n    <mat-form-field class=\"long-input\">\n      <mat-label>Search</mat-label>\n      <input formControlName=\"searchInput\" matInput placeholder=\"Video Title\">\n    </mat-form-field>\n\n    <button mat-raised-button type=\"submit\" color=\"primary\">Submit</button>\n  </div>\n</form>\n\n<div *ngIf=\"playlist == undefined && isLoading == true\">\n  <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</div>\n\n<div *ngIf=\"playlist != undefined\" class=\"video-results\">\n  <div *ngFor=\"let video of videosToDisplay\" class=\"listitemvideo\">\n    <a class=\"video-link\" style=\" color: white; text-decoration: none;\" href=\"https://youtu.be/{{video.videoID}}\" target=\"_blank\">\n      <table>\n        <tr>\n          <td>\n            <img class=\"thumbnail\" src=\"{{video.thumbnail}}\" />\n          </td>\n          <td>\n            <div>{{video.title}}</div>\n            <div>{{video.channelTitle}}</div>\n          </td>\n        </tr>\n      </table>\n    </a>\n  </div>\n</div>\n\n<div class=\"video-results\">\n\n  <div class=\"listitemvideo\">\n    <a class=\"video-link\" style=\" color: white; text-decoration: none;\" href=\"\" target=\"_blank\">\n      <table>\n        <tr>\n          <td>\n            <img class=\"thumbnail\" src=\"https://img.youtube.com/vi/JzLV2pOJbss/0.jpg\" />\n          </td>\n          <td>\n            <div>Guy Squeexes his shit LIVE on Twitch</div>\n            <div>SqueexTV</div>\n          </td>\n        </tr>\n      </table>\n    </a>\n  </div>\n\n</div>\n\n\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { PlaylistDTO, VideoDTO } from '../DTOs/PlaylistDTO';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TestComponent {\r\n\r\n  http!: HttpClient;\r\n  baseUrl!: string;\r\n  formBuilder!: FormBuilder;\r\n\r\n  isLoading: boolean = false;\r\n  errorMessage!: string;\r\n  loadPlaylistForm!: FormGroup;\r\n  resultSearchForm!: FormGroup;\r\n  playlist!: PlaylistDTO;\r\n  videosToDisplay!: VideoDTO[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string, formBuilder: FormBuilder) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl;\r\n    this.formBuilder = formBuilder;\r\n\r\n    this.loadPlaylistForm = formBuilder.group({\r\n      playlistLink: ['https://www.youtube.com/playlist?list=PLNL_Z6NDFLJZafBMO4kA9PbNBq0t-f9hx'],\r\n    });\r\n\r\n    this.resultSearchForm = formBuilder.group({\r\n      searchInput: [''],\r\n    });\r\n  }\r\n\r\n  public getPlaylistLinkInput(): string {\r\n    return this.loadPlaylistForm.controls.playlistLink.value as string;\r\n  }\r\n\r\n  public getSearchInput(): string {\r\n    return this.resultSearchForm.controls.searchInput.value as string;\r\n  }\r\n\r\n  public PlaylistSubmit() {\r\n    var playlistID = this.getPlaylistLinkInput().includes('https://www.youtube.com/playlist?list=') ? this.loadPlaylistForm.controls.playlistLink.value.split('=')[1] : this.loadPlaylistForm.controls.playlistLink.value;\r\n    this.isLoading = true;\r\n\r\n    this.http.get<PlaylistDTO>(this.baseUrl + 'playlist/GetPlaylistFromYT?playlistID=' + playlistID).subscribe(result => {\r\n      this.playlist = result;\r\n      this.videosToDisplay = this.playlist.videos;\r\n      this.isLoading = false;\r\n      console.log(this.playlist);\r\n    },\r\n      error => {\r\n        console.error(error);\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  public ResultsSearch() {\r\n    var searchString = this.getSearchInput().toLowerCase();\r\n    this.videosToDisplay = this.playlist.videos.filter(x => {\r\n      if (x.channelTitle != undefined) {\r\n        if (x.channelTitle.toLowerCase().includes(searchString)) {\r\n          return true;\r\n        }\r\n      }\r\n      if (x.title != undefined) {\r\n        if (x.title.toLowerCase().includes(searchString)) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}